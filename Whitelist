-- This file was generated using Luraph Obfuscator v12.0 by memcorrupt.

local lIlIiiiI1IiIIlllI1lIl = assert local IllIi1iIlIlliII1IIi = select local lIlIIil1il1111llIiliI = tonumber local i11li11llili1illIlI = unpack local I1l1111I11iiIlII1II = pcall local lIl1iIiIIi1IIIiilIil1 = setfenv local i1lilIlillIII11IllI = setmetatable local iIl1ll1IlIII11IiI11 = type local IlI1i1I11iIilllIi1i = getfenv local lII1Il1III1iIilill1 = tostring local lllliIl1iIlii11IIi1 = error local liIlI1ll1iilii11I11 = string.sub local liillI111i1i1lli1ii = string.byte local lil1i1li1iil1iI1i1l = string.char local lill1i1lllI1lIi1i1l = string.rep local lIlliI111ll1IIli1l111 = string.gsub local II1liiiliIlI1lI1II1 = string.match local i1II111IillilI1ilIi = liillI111i1i1lli1ii("#", 1) local lIli1Ii11lilIIIl1iIli, ilI1II11i1lili1i11l = #{6089}, #{ 2229, 2569, 123, 222, 3862, 3868, 6242, 3427, 3353, 1104, 293, 5307, 3490, 4194, 4217, 436, 387, 2376, 4361, 3165 } + i1II111IillilI1ilIi + 131016 local i1llI1I1lliil1lili1 = {} local lIl1Ii11Iil1i1IIIIIii = 1 local function i1l1ii111i1iii1l1Ii(Iill1IIliIlillIi1ll, liIlIIIilil1Ii1II11) local lIli1ii111I1ll1ilIilI Iill1IIliIlillIi1ll = lIlliI111ll1IIli1l111(liIlI1ll1iilii11I11(Iill1IIliIlillIi1ll, 5), "..", function(llIlI1iiIilIlI1iili) if liillI111i1i1lli1ii(llIlI1iiIilIlI1iili, 2) == 72 then lIli1ii111I1ll1ilIilI = lIlIIil1il1111llIiliI(liIlI1ll1iilii11I11(llIlI1iiIilIlI1iili, 1, 1)) return "" else local illI11IIllI1lII111l = lil1i1li1iil1iI1i1l(lIlIIil1il1111llIiliI(llIlI1iiIilIlI1iili, 16)) if lIli1ii111I1ll1ilIilI then local lllIIl1iiII1ii1ilIi = lill1i1lllI1lIi1i1l(illI11IIllI1lII111l, lIli1ii111I1ll1ilIilI) lIli1ii111I1ll1ilIilI = nil return lllIIl1iiII1ii1ilIi else return illI11IIllI1lII111l end end end) local function lIll1lIilll1llIiiIl1i() local IIl1II11l1IiIillIli = liillI111i1i1lli1ii(Iill1IIliIlillIi1ll, lIl1Ii11Iil1i1IIIIIii, lIl1Ii11Iil1i1IIIIIii) lIl1Ii11Iil1i1IIIIIii = lIl1Ii11Iil1i1IIIIIii + 1 return IIl1II11l1IiIillIli end local function li1IlllIi1i11lilIl1() local IIl1II11l1IiIillIli, illI11IIllI1lII111l, lllIIl1iiII1ii1ilIi, lIlI1lI1i1iIi1l11I1lI = liillI111i1i1lli1ii(Iill1IIliIlillIi1ll, lIl1Ii11Iil1i1IIIIIii, lIl1Ii11Iil1i1IIIIIii + 3) lIl1Ii11Iil1i1IIIIIii = lIl1Ii11Iil1i1IIIIIii + 4 return lIlI1lI1i1iIi1l11I1lI * 16777216 + lllIIl1iiII1ii1ilIi * 65536 + illI11IIllI1lII111l * 256 + IIl1II11l1IiIillIli end local function IIiI11iliili1IIIIIl(I1ii1IIiIllli1ll1ll, li1Ii111i1IIlIl1l1i, lIliiIlllllliiIII1Ili) if lIliiIlllllliiIII1Ili then local lIlIIi1IlIIiI1iIii11l, iIil1iIilliIl1iIiii = 0, 0 for lIlIiili1111lIIl1Il1l = li1Ii111i1IIlIl1l1i, lIliiIlllllliiIII1Ili do lIlIIi1IlIIiI1iIii11l = lIlIIi1IlIIiI1iIii11l + 2 ^ iIil1iIilliIl1iIiii * IIiI11iliili1IIIIIl(I1ii1IIiIllli1ll1ll, lIlIiili1111lIIl1Il1l) iIil1iIilliIl1iIiii = iIil1iIilliIl1iIiii + 1 end return lIlIIi1IlIIiI1iIii11l else local iiliIliili111i1lil1 = 2 ^ (li1Ii111i1IIlIl1l1i - 1) return iiliIliili111i1lil1 <= I1ii1IIiIllli1ll1ll % (iiliIliili111i1lil1 + iiliIliili111i1lil1) and 1 or 0 end end local function lIliIlIliil1l1iIIilll() local IIl1II11l1IiIillIli, illI11IIllI1lII111l = li1IlllIi1i11lilIl1(), li1IlllIi1i11lilIl1() if IIl1II11l1IiIillIli == 0 and illI11IIllI1lII111l == 0 then return 0 end return (-2 * IIiI11iliili1IIIIIl(illI11IIllI1lII111l, 32) + 1) * 2 ^ (IIiI11iliili1IIIIIl(illI11IIllI1lII111l, 21, 31) - 1023) * ((IIiI11iliili1IIIIIl(illI11IIllI1lII111l, 1, 20) * 4294967296 + IIl1II11l1IiIillIli) / 4503599627370496 + 1) end local function lIll1Iii11lil1IIlI1iI(IIiI11iIlI1I1llIiI1) local ii1iliIlII11Ilii1II = { liillI111i1i1lli1ii(Iill1IIliIlillIi1ll, lIl1Ii11Iil1i1IIIIIii, lIl1Ii11Iil1i1IIIIIii + 3) } lIl1Ii11Iil1i1IIIIIii = lIl1Ii11Iil1i1IIIIIii + 4 local i11lI1lill1Il11i11i = { nil, nil, nil, nil, nil, nil, nil, nil } for lIlIiili1111lIIl1Il1l = 1, 8 do i11lI1lill1Il11i11i[lIlIiili1111lIIl1Il1l] = IIiI11iliili1IIIIIl(IIiI11iIlI1I1llIiI1, lIlIiili1111lIIl1Il1l) end local lllIIill111IlIiiI11 = "" for lIlIiili1111lIIl1Il1l = 1, 4 do local lIlIIi1IlIIiI1iIii11l, iIil1iIilliIl1iIiii = 0, 0 for I1iIiiIiil11iI1111l = 1, 8 do local III1IIiIll1lili11Ii = IIiI11iliili1IIIIIl(ii1iliIlII11Ilii1II[lIlIiili1111lIIl1Il1l], I1iIiiIiil11iI1111l) if i11lI1lill1Il11i11i[I1iIiiIiil11iI1111l] == 1 then III1IIiIll1lili11Ii = III1IIiIll1lili11Ii == 1 and 0 or 1 end lIlIIi1IlIIiI1iIii11l = lIlIIi1IlIIiI1iIii11l + 2 ^ iIil1iIilliIl1iIiii * III1IIiIll1lili11Ii iIil1iIilliIl1iIiii = iIil1iIilliIl1iIiii + 1 end lllIIill111IlIiiI11 = lllIIill111IlIiiI11 .. lllIIill111IlIiiI11.char(lIlIIi1IlIIiI1iIii11l) end local IIl1II11l1IiIillIli, illI11IIllI1lII111l, lllIIl1iiII1ii1ilIi, lIlI1lI1i1iIi1l11I1lI = liillI111i1i1lli1ii(lllIIill111IlIiiI11, 1, 4) return lIlI1lI1i1iIi1l11I1lI * 16777216 + lllIIl1iiII1ii1ilIi * 65536 + illI11IIllI1lII111l * 256 + IIl1II11l1IiIillIli end local function lIl1111lIii1IIi1I1l(IIiI11iIlI1I1llIiI1) local IilIIIiiillliiii1ll = li1IlllIi1i11lilIl1() lIl1Ii11Iil1i1IIIIIii = lIl1Ii11Iil1i1IIIIIii + IilIIIiiillliiii1ll local i11lI1lill1Il11i11i = { nil, nil, nil, nil, nil, nil, nil, nil } for lIlIiili1111lIIl1Il1l = 1, 8 do i11lI1lill1Il11i11i[lIlIiili1111lIIl1Il1l] = IIiI11iliili1IIIIIl(IIiI11iIlI1I1llIiI1, lIlIiili1111lIIl1Il1l) end local lllIIill111IlIiiI11 = "" for lIlIiili1111lIIl1Il1l = 1, IilIIIiiillliiii1ll do local lIlIIi1IlIIiI1iIii11l, iIil1iIilliIl1iIiii = 0, 0 for I1iIiiIiil11iI1111l = 1, 8 do local III1IIiIll1lili11Ii = IIiI11iliili1IIIIIl(liillI111i1i1lli1ii(Iill1IIliIlillIi1ll, lIl1Ii11Iil1i1IIIIIii - IilIIIiiillliiii1ll + lIlIiili1111lIIl1Il1l - 1), I1iIiiIiil11iI1111l) if i11lI1lill1Il11i11i[I1iIiiIiil11iI1111l] == 1 then III1IIiIll1lili11Ii = III1IIiIll1lili11Ii == 1 and 0 or 1 end lIlIIi1IlIIiI1iIii11l = lIlIIi1IlIIiI1iIii11l + 2 ^ iIil1iIilliIl1iIiii * III1IIiIll1lili11Ii iIil1iIilliIl1iIiii = iIil1iIilliIl1iIiii + 1 end lllIIill111IlIiiI11 = lllIIill111IlIiiI11 .. lllIIill111IlIiiI11.char(lIlIIi1IlIIiI1iIii11l) end return lllIIill111IlIiiI11 end local llIllill1lIIlIilli1 = lIll1lIilll1llIiiIl1i() local li1IiI1liiil111l1li = lIll1lIilll1llIiiIl1i() local function III1lIil1lIiii1lI1I() local iiilililIIiIIiiIl1i = { [24756] = {}, [62626] = {}, [132049] = {}, [114396] = {} } li1IlllIi1i11lilIl1() iiilililIIiIIiiIl1i[13266] = lIll1lIilll1llIiiIl1i() li1IlllIi1i11lilIl1() lIll1lIilll1llIiiIl1i() lIll1lIilll1llIiiIl1i() li1IlllIi1i11lilIl1() li1IlllIi1i11lilIl1() iiilililIIiIIiiIl1i[38528] = lIll1lIilll1llIiiIl1i() li1IlllIi1i11lilIl1() lIll1lIilll1llIiiIl1i() lIll1lIilll1llIiiIl1i() local i1lI1l1ill1lI11i1iI = li1IlllIi1i11lilIl1() for lIlIiili1111lIIl1Il1l = lIli1Ii11lilIIIl1iIli, i1lI1l1ill1lI11i1iI do iiilililIIiIIiiIl1i[114396][lIlIiili1111lIIl1Il1l] = li1IlllIi1i11lilIl1() end iiilililIIiIIiiIl1i[79650] = lIll1lIilll1llIiiIl1i() local i1lI1l1ill1lI11i1iI = li1IlllIi1i11lilIl1() - (#{ 3197, 1242, 6047, 4500, 1997, 1635, 2439, 4095, 118, 6110, 1469, 5764, 4411, 6220, 6656, 3468, 2992, 3361, 30, 1079, 2886 } + i1II111IillilI1ilIi + 133676) for lIlIiili1111lIIl1Il1l = lIli1Ii11lilIIIl1iIli, i1lI1l1ill1lI11i1iI do local iIIl11III11liIii1iI = {} local iIl1ll1IlIII11IiI11 = lIll1lIilll1llIiiIl1i() if iIl1ll1IlIII11IiI11 == #{ 332, 3878, 3184, 5556, 4241, 4035, 4173, 5354, 3625, 6466, 2425, 2299, 2168, 5093, 2127, 649, 2768, 6956, 5156, 1233 } + i1II111IillilI1ilIi + 139 then iIIl11III11liIii1iI[40363] = lIliIlIliil1l1iIIilll() + lIliIlIliil1l1iIIilll() end if iIl1ll1IlIII11IiI11 == #{ 3390, 5778, 379, 3928, 991, 524, 4508, 5046, 5578, 1459, 226, 325, 1778, 2935, 4102, 4746, 6502, 3194, 3468, 5193, 4073, 5206 } + i1II111IillilI1ilIi + 153 then iIIl11III11liIii1iI[40363] = lIliIlIliil1l1iIIilll() + lIliIlIliil1l1iIIilll() end if iIl1ll1IlIII11IiI11 == #{ 2372, 1203, 700, 1188, 1833, 2790, 2966, 1131, 5004, 1838, 4003, 5214, 2095, 3578, 2528, 5770, 3489, 2601, 6010, 3502, 4100 } + i1II111IillilI1ilIi + 157 then iIIl11III11liIii1iI[40363] = lIl1111lIii1IIi1I1l(llIllill1lIIlIilli1) end if iIl1ll1IlIII11IiI11 == #{ 4972, 3977, 3594, 5769, 6744, 6724, 5999, 4074, 3887, 4527, 2087, 281, 4261 } then iIIl11III11liIii1iI[40363] = lIl1111lIii1IIi1I1l(#{ 2092, 5323, 3416, 6492, 3671, 1761, 1135, 2377, 1800, 3717, 4947, 1085, 6130, 576, 4390, 2135, 5113, 5161, 2400, 1657, 6115, 4995, 4781, 5587 } + i1II111IillilI1ilIi + 61) end if iIl1ll1IlIII11IiI11 == #{ 2491, 255, 3011, 4407, 2047, 6528, 343, 3747, 250, 6166, 4320, 6296, 6238, 4423, 4278, 1909, 6236, 3562, 5904, 5632, 1531, 2900 } + i1II111IillilI1ilIi + 65 then iIIl11III11liIii1iI[40363] = #{ 6130, 5307, 1337, 2571, 1420, 4026, 2519, 4194, 2224, 1548, 1526, 1505, 5232, 4015, 2036, 2637, 80, 5275, 4793, 5871, 6097, 827 } + i1II111IillilI1ilIi + 43647 == #{ 6130, 5307, 1337, 2571, 1420, 4026, 2519, 4194, 2224, 1548, 1526, 1505, 5232, 4015, 2036, 2637, 80, 5275, 4793, 5871, 6097, 827 } + i1II111IillilI1ilIi + 43647 end if iIl1ll1IlIII11IiI11 == #{ 4734, 5382, 5225, 2190, 3190, 2627, 2185, 2592, 1146, 3891, 325, 5268, 3768, 1616, 4899, 1322, 38, 4110, 3642, 5008, 5917 } + i1II111IillilI1ilIi + 67 then iIIl11III11liIii1iI[40363] = #{ 6053, 854, 757, 2090, 4429, 2623, 3923, 3610, 3174, 418, 1382, 1063, 3471, 6808, 5113, 6117, 1518, 6287, 3306, 4509, 5075, 6457, 4742, 1471 } + i1II111IillilI1ilIi + 17599 == #{ 70, 3587, 4753, 6811, 3904, 3581, 433, 6250, 2703, 141, 5584, 4562, 850, 1654, 1646, 4806, 2577, 6272, 6252, 2904 } + i1II111IillilI1ilIi + 422 end if iIl1ll1IlIII11IiI11 == #{ 1301, 5811, 1148, 2746, 1049, 4009, 2081, 3234, 5308, 6871, 4665, 3244, 4896, 5939, 4795, 6401, 5940, 1291, 6590, 4844 } + i1II111IillilI1ilIi + 138 then iIIl11III11liIii1iI[40363] = lIll1lIilll1llIiiIl1i() end if iIl1ll1IlIII11IiI11 == #{ 6650, 3085, 515, 2688, 6893, 1076, 2288, 1527, 3158, 603, 1877, 1185, 2118, 4297, 1072, 3570, 2510, 3898, 3314, 1792 } + i1II111IillilI1ilIi + 126 then iIIl11III11liIii1iI[40363] = lIl1111lIii1IIi1I1l(#{ 2092, 5323, 3416, 6492, 3671, 1761, 1135, 2377, 1800, 3717, 4947, 1085, 6130, 576, 4390, 2135, 5113, 5161, 2400, 1657, 6115, 4995, 4781, 5587 } + i1II111IillilI1ilIi + 61) end if iIl1ll1IlIII11IiI11 == #{ 5191, 6489, 982, 469, 1751, 3605, 4947, 2542, 3276, 3910, 2291, 6580, 6820, 3633, 3124, 4923, 5226, 2003, 5770, 4864 } + i1II111IillilI1ilIi + 183 then iIIl11III11liIii1iI[40363] = lIliIlIliil1l1iIIilll() end iiilililIIiIIiiIl1i[24756][lIlIiili1111lIIl1Il1l - lIli1Ii11lilIIIl1iIli] = iIIl11III11liIii1iI end lIll1lIilll1llIiiIl1i() lIll1lIilll1llIiiIl1i() lIll1lIilll1llIiiIl1i() li1IlllIi1i11lilIl1() local i1lI1l1ill1lI11i1iI = li1IlllIi1i11lilIl1() - (#{ 591, 1660, 3239, 6869, 3683, 6333, 2582, 1410, 1437, 6053, 541, 2181, 6853, 3854, 778, 636, 740, 2012, 5804, 5658, 3521, 6763, 5865, 6296 } + i1II111IillilI1ilIi + 133650) for lIlIiili1111lIIl1Il1l = lIli1Ii11lilIIIl1iIli, i1lI1l1ill1lI11i1iI do local lIll1iI1l1l1IIIi1II11 = {} local lIlIliIiIiiIiiiIiIi1i = lIll1Iii11lil1IIlI1iI(li1IiI1liiil111l1li) lIll1iI1l1l1IIIi1II11[95622] = IIiI11iliili1IIIIIl(lIlIliIiIiiIiiiIiIi1i, #{1309}, #{ 4871, 3644, 642, 751, 4733, 2732, 3644, 4493, 2106 }) lIll1iI1l1l1IIIi1II11[91770] = IIiI11iliili1IIIIIl(lIlIliIiIiiIiiiIiIi1i, #{ 4824, 5262, 353, 1231, 6849, 1078, 2301, 6784, 4330, 4949, 2158, 6525, 1447, 3557, 6560, 6204, 3112, 24, 2099 }, #{ 5934, 6713, 3178, 3128, 4234, 6802, 6215, 5323, 2317, 4233, 94, 4597, 5291, 4571, 4717, 4313, 4403, 6581, 4428, 2055, 5329, 3580, 3516 } + i1II111IillilI1ilIi + -32) lIll1iI1l1l1IIIi1II11[132096] = IIiI11iliili1IIIIIl(lIlIliIiIiiIiiiIiIi1i, #{ 1695, 2849, 699, 3106, 4536, 582, 6540, 4605, 6119, 4030 }, #{ 2654, 5510, 2504, 3827, 5113, 844, 2169, 438, 1956, 3700, 6814, 3558, 4808, 1696, 1372, 6090, 1031, 5687 }) lIll1iI1l1l1IIIi1II11[108436] = IIiI11iliili1IIIIIl(lIlIliIiIiiIiiiIiIi1i, #{ 3898, 5452, 833, 560, 4626, 767, 5791, 1924, 3788, 4299, 207, 1536, 3614, 6278, 4965, 3037, 4855, 843, 6825, 4938, 3455, 5067 } + i1II111IillilI1ilIi + -30, #{ 4347, 100, 6645, 1266, 6618, 5355, 3782, 4521, 5033, 1280, 2114, 4941, 3090, 5034, 3426, 2300, 2066, 2051, 1753, 2156, 3855, 2030, 3755 } + i1II111IillilI1ilIi + -26) lIll1iI1l1l1IIIi1II11[21293] = IIiI11iliili1IIIIIl(lIlIliIiIiiIiiiIiIi1i, #{4795}, #{ 1935, 591, 4497, 557, 3797, 2980, 4529, 3194, 582, 1744, 263, 4555, 2451, 3869, 3525, 4007, 2119, 5199 }) iiilililIIiIIiiIl1i[132049][lIlIiili1111lIIl1Il1l] = lIll1iI1l1l1IIIi1II11 end li1IlllIi1i11lilIl1() local i1lI1l1ill1lI11i1iI = li1IlllIi1i11lilIl1() for lIlIiili1111lIIl1Il1l = lIli1Ii11lilIIIl1iIli, i1lI1l1ill1lI11i1iI do iiilililIIiIIiiIl1i[62626][lIlIiili1111lIIl1Il1l - lIli1Ii11lilIIIl1iIli] = III1lIil1lIiii1lI1I() end return iiilililIIiIIiiIl1i end local function lIlIIlllIlIlIIIi1iIII(iiilililIIiIIiiIl1i, liIlIIIilil1Ii1II11, IlliliiIlIIIi1IIi1l) local lllIiIllII1illI1l1i, I1I1iilIIiiii1iiIll = 17, 30 local liIiil11Ill1l11I1Il = iiilililIIiIIiiIl1i[132049] local i1liIil1ii1ilIIiIlI = i1lilIlillIII11IllI({}, { __index = function(lIIli1lIilii1lIi1il, IiiiII11IIl1lili11I) local lllIIill111IlIiiI11 = iiilililIIiIIiiIl1i[24756][IiiiII11IIl1lili11I] if liIlI1ll1iilii11I11(iIl1ll1IlIII11IiI11(lllIIill111IlIiiI11[40363]), 1, 1) == "s" then return { [40363] = liIlI1ll1iilii11I11(lllIIill111IlIiiI11[40363], 3) } end return lllIIill111IlIiiI11 end }) local lIll11l1iIIIII11lliIi = 38528 local lIlIllliiI1lll11ii11i = iiilililIIiIIiiIl1i[62626] local lIl1llI11IlIi1IIliIlI = 40363 local Ii1i1i1llliII1lIlli = iiilililIIiIIiiIl1i[13266] local Il1IiiliI1iiII1Iii1 = 108436 local iliilii1IliiilI1II1 = iiilililIIiIIiiIl1i[114396] local lIliiilI11lI1lli1iIii = 95622 local function lllIIIl1ililllli1l1(...) local lIli1llill1illiIlIi1i = 0 local IlI1iIi11iIi1I1lIlI = { i11li11llili1illIlI({}, 1, iiilililIIiIIiiIl1i[79650]) } local iliilIll11i1Ii11Iil = 1 local lIllliIii1lliIIiiliI1 = {} local i1iIll1iIll1II1llIl = {} local lIliiIll1i11llIi1iIli = 1 local liIlIIIilil1Ii1II11 = IlI1i1I11iIilllIi1i() local IlI1li1lI1I11111ili = { ... } local I11lilIilill11lIIll = #IlI1li1lI1I11111ili - 1 for lIlIiili1111lIIl1Il1l = 0, I11lilIilill11lIIll do if lIlIiili1111lIIl1Il1l < Ii1i1i1llliII1lIlli then IlI1iIi11iIi1I1lIlI[lIlIiili1111lIIl1Il1l] = IlI1li1lI1I11111ili[lIlIiili1111lIIl1Il1l + 1] end end local function IllIlI1I1iIil1lIli1(...) local lllIIl1iiII1ii1ilIi = IllIi1iIlIlliII1IIi("#", ...) local lIIli1lIilii1lIi1il = { ... } return lllIIl1iiII1ii1ilIi, lIIli1lIilii1lIi1il end local function l1IiIllli1iil1Iill1() while true do local l1i1Ill111i1IIII1lI = liIiil11Ill1l11I1Il[iliilIll11i1Ii11Iil] local lIlilll1lIilIlllIIli1 = l1i1Ill111i1IIII1lI[108436] iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + 1 local lIlIlI1il1l1IliiI1iI1 = l1i1Ill111i1IIII1lI[21293] - ilI1II11i1lili1i11l local li1ll1I11l1Il1iIl1l = l1i1Ill111i1IIII1lI[91770] local liiilii11i1ll11illl = l1i1Ill111i1IIII1lI[95622] local i1ii1iliIil1iiIil11 = l1i1Ill111i1IIII1lI[21293] local lIl1illil11Ii11ilIi1l = l1i1Ill111i1IIII1lI[132096] if lIlilll1lIilIlllIIli1 >= 19 then if lIlilll1lIilIlllIIli1 < 28 then if lIlilll1lIilIlllIIli1 >= 23 then if lIlilll1lIilIlllIIli1 < 25 then if lIlilll1lIilIlllIIli1 ~= 24 then if lIl1illil11Ii11ilIi1l == 137 then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil - 1 liIiil11Ill1l11I1Il[iliilIll11i1Ii11Iil] = { [108436] = 12, [91770] = (li1ll1I11l1Il1iIl1l - 246) % 256, [132096] = (liiilii11i1ll11illl - 246) % 256, [21293] = 0 } elseif lIl1illil11Ii11ilIi1l == 152 then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil - 1 liIiil11Ill1l11I1Il[iliilIll11i1Ii11Iil] = { [108436] = 35, [91770] = (li1ll1I11l1Il1iIl1l - 41) % 256, [132096] = (liiilii11i1ll11illl - 41) % 256, [21293] = 0 } else IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = -IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end else IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = liiilii11i1ll11illl ~= 0 if lIl1illil11Ii11ilIi1l ~= 0 then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + 1 end end elseif lIlilll1lIilIlllIIli1 < 26 then local i1Ii1i1il1ll1IIIl1i, ii11ll1llI111i1lllI, l1IiIllli1iil1Iill1 if liiilii11i1ll11illl ~= 1 then if liiilii11i1ll11illl ~= 0 then ii11ll1llI111i1lllI = li1ll1I11l1Il1iIl1l + liiilii11i1ll11illl - 1 else ii11ll1llI111i1lllI = lIli1llill1illiIlIi1i end ii11ll1llI111i1lllI, i1Ii1i1il1ll1IIIl1i = IllIlI1I1iIil1lIli1(IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l](i11li11llili1illIlI(IlI1iIi11iIi1I1lIlI, li1ll1I11l1Il1iIl1l + 1, ii11ll1llI111i1lllI))) else ii11ll1llI111i1lllI, i1Ii1i1il1ll1IIIl1i = IllIlI1I1iIil1lIli1(IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l]()) end if lIl1illil11Ii11ilIi1l ~= 1 then if lIl1illil11Ii11ilIi1l ~= 0 then ii11ll1llI111i1lllI = li1ll1I11l1Il1iIl1l + lIl1illil11Ii11ilIi1l - 2 else ii11ll1llI111i1lllI = ii11ll1llI111i1lllI + li1ll1I11l1Il1iIl1l end l1IiIllli1iil1Iill1 = 0 for lIlIiili1111lIIl1Il1l = li1ll1I11l1Il1iIl1l, ii11ll1llI111i1lllI do l1IiIllli1iil1Iill1 = l1IiIllli1iil1Iill1 + 1 IlI1iIi11iIi1I1lIlI[lIlIiili1111lIIl1Il1l] = i1Ii1i1il1ll1IIIl1i[l1IiIllli1iil1Iill1] end end lIli1llill1illiIlIi1i = ii11ll1llI111i1lllI - 1 elseif lIlilll1lIilIlllIIli1 ~= 27 then if liiilii11i1ll11illl > 255 then liiilii11i1ll11illl = i1liIil1ii1ilIIiIlI[liiilii11i1ll11illl - 256][lIl1llI11IlIi1IIliIlI] else liiilii11i1ll11illl = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = liiilii11i1ll11illl ^ lIl1illil11Ii11ilIi1l else if liiilii11i1ll11illl > 255 then liiilii11i1ll11illl = i1liIil1ii1ilIIiIlI[liiilii11i1ll11illl - 256][lIl1llI11IlIi1IIliIlI] else liiilii11i1ll11illl = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = liiilii11i1ll11illl + lIl1illil11Ii11ilIi1l end elseif lIlilll1lIilIlllIIli1 >= 21 then if lIlilll1lIilIlllIIli1 ~= 22 then for lIlIiili1111lIIl1Il1l = li1ll1I11l1Il1iIl1l, #IlI1iIi11iIi1I1lIlI do local lllII1Iillii1Iil11l = lIliiIll1i11llIi1iIli for I1iIiiIiil11iI1111l = 1, #lIllliIii1lliIIiiliI1 do local lIl1IIIII11l1IliIl1 = lIllliIii1lliIIiiliI1[I1iIiiIiil11iI1111l] for IIiI11iIlI1I1llIiI1, Ii1iiliilIII1I1il1i in next, lIl1IIIII11l1IliIl1, nil do if IlI1iIi11iIi1I1lIlI == Ii1iiliilIII1I1il1i[1] and Ii1iiliilIII1I1il1i[2] == lIlIiili1111lIIl1Il1l then if not i1iIll1iIll1II1llIl[lllII1Iillii1Iil11l] then i1iIll1iIll1II1llIl[lllII1Iillii1Iil11l] = IlI1iIi11iIi1I1lIlI[lIlIiili1111lIIl1Il1l] lIliiIll1i11llIi1iIli = lIliiIll1i11llIi1iIli + 1 end lIl1IIIII11l1IliIl1[IIiI11iIlI1I1llIiI1] = {i1iIll1iIll1II1llIl, lllII1Iillii1Iil11l} end end end end else local I1li1IIl1ll1lIlI1I1 = liiilii11i1ll11illl > 0 and liiilii11i1ll11illl - 1 or I11lilIilill11lIIll - Ii1i1i1llliII1lIlli if I1li1IIl1ll1lIlI1I1 < 0 then I1li1IIl1ll1lIlI1I1 = -1 end for lIlIiili1111lIIl1Il1l = li1ll1I11l1Il1iIl1l, li1ll1I11l1Il1iIl1l + I1li1IIl1ll1lIlI1I1 do IlI1iIi11iIi1I1lIlI[lIlIiili1111lIIl1Il1l] = IlI1li1lI1I11111ili[Ii1i1i1llliII1lIlli + (lIlIiili1111lIIl1Il1l - li1ll1I11l1Il1iIl1l) + 1] end lIli1llill1illiIlIi1i = li1ll1I11l1Il1iIl1l + I1li1IIl1ll1lIlI1I1 end elseif lIlilll1lIilIlllIIli1 == 20 then local II1iIi1liIiiI1IlIl1 = (lIl1illil11Ii11ilIi1l - 1) * 50 if liiilii11i1ll11illl == 0 then liiilii11i1ll11illl = lIli1llill1illiIlIi1i - li1ll1I11l1Il1iIl1l end for lIlIiili1111lIIl1Il1l = 1, liiilii11i1ll11illl do IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l][II1iIi1liIiiI1IlIl1 + lIlIiili1111lIIl1Il1l] = IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + lIlIiili1111lIIl1Il1l] end else if liiilii11i1ll11illl > 255 then liiilii11i1ll11illl = i1liIil1ii1ilIIiIlI[liiilii11i1ll11illl - 256][lIl1llI11IlIi1IIliIlI] else liiilii11i1ll11illl = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = liiilii11i1ll11illl - lIl1illil11Ii11ilIi1l end elseif lIlilll1lIilIlllIIli1 < 33 then if lIlilll1lIilIlllIIli1 < 30 then if lIlilll1lIilIlllIIli1 == 29 then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + lIlIlI1il1l1IliiI1iI1 elseif not not IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] == (lIl1illil11Ii11ilIi1l == 0) then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + 1 else IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end elseif lIlilll1lIilIlllIIli1 >= 31 then if lIlilll1lIilIlllIIli1 == 32 then if liiilii11i1ll11illl > 255 then liiilii11i1ll11illl = i1liIil1ii1ilIIiIlI[liiilii11i1ll11illl - 256][lIl1llI11IlIi1IIliIlI] else liiilii11i1ll11illl = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = liiilii11i1ll11illl / lIl1illil11Ii11ilIi1l else if liiilii11i1ll11illl > 255 then liiilii11i1ll11illl = i1liIil1ii1ilIIiIlI[liiilii11i1ll11illl - 256][lIl1llI11IlIi1IIliIlI] else liiilii11i1ll11illl = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = liiilii11i1ll11illl * lIl1illil11Ii11ilIi1l end else IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = IlliliiIlIIIi1IIi1l[liiilii11i1ll11illl] end elseif lIlilll1lIilIlllIIli1 >= 35 then if lIlilll1lIilIlllIIli1 < 36 then if liiilii11i1ll11illl == 248 then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil - 1 liIiil11Ill1l11I1Il[iliilIll11i1Ii11Iil] = { [108436] = 17, [91770] = (li1ll1I11l1Il1iIl1l - 8) % 256, [95622] = (lIl1illil11Ii11ilIi1l - 8) % 256, [21293] = 0 } elseif liiilii11i1ll11illl == 162 then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil - 1 liIiil11Ill1l11I1Il[iliilIll11i1Ii11Iil] = { [108436] = 33, [91770] = (li1ll1I11l1Il1iIl1l - 191) % 256, [95622] = (lIl1illil11Ii11ilIi1l - 191) % 256, [21293] = 0 } else local II1iIi1liIiiI1IlIl1 = li1ll1I11l1Il1iIl1l + 2 local iIiiliIi11Illi1i1I1 = { IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l](IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 1], IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 2]) } for lIlIiili1111lIIl1Il1l = 1, lIl1illil11Ii11ilIi1l do IlI1iIi11iIi1I1lIlI[II1iIi1liIiiI1IlIl1 + lIlIiili1111lIIl1Il1l] = iIiiliIi11Illi1i1I1[lIlIiili1111lIIl1Il1l] end if IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 3] ~= nil then IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 2] = IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 3] else iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + 1 end end elseif lIlilll1lIilIlllIIli1 == 37 then local iIiiliIi11Illi1i1I1 = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] for lIlIiili1111lIIl1Il1l = liiilii11i1ll11illl + 1, lIl1illil11Ii11ilIi1l do iIiiliIi11Illi1i1I1 = iIiiliIi11Illi1i1I1 .. IlI1iIi11iIi1I1lIlI[lIlIiili1111lIIl1Il1l] end IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = iIiiliIi11Illi1i1I1 else if liiilii11i1ll11illl > 255 then liiilii11i1ll11illl = i1liIil1ii1ilIIiIlI[liiilii11i1ll11illl - 256][lIl1llI11IlIi1IIliIlI] else liiilii11i1ll11illl = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l][liiilii11i1ll11illl] = lIl1illil11Ii11ilIi1l end elseif lIlilll1lIilIlllIIli1 ~= 34 then if lIl1illil11Ii11ilIi1l == 55 then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil - 1 liIiil11Ill1l11I1Il[iliilIll11i1Ii11Iil] = { [108436] = 15, [91770] = (li1ll1I11l1Il1iIl1l - 138) % 256, [95622] = (liiilii11i1ll11illl - 138) % 256, [21293] = 0 } elseif lIl1illil11Ii11ilIi1l == 195 then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil - 1 liIiil11Ill1l11I1Il[iliilIll11i1Ii11Iil] = { [108436] = 30, [91770] = (li1ll1I11l1Il1iIl1l - 143) % 256, [95622] = (liiilii11i1ll11illl - 143) % 256, [21293] = 0 } else if liiilii11i1ll11illl == 1 then return true end local ii11ll1llI111i1lllI = li1ll1I11l1Il1iIl1l + liiilii11i1ll11illl - 2 if liiilii11i1ll11illl == 0 then ii11ll1llI111i1lllI = lIli1llill1illiIlIi1i end return true, li1ll1I11l1Il1iIl1l, ii11ll1llI111i1lllI end else if liiilii11i1ll11illl > 255 then liiilii11i1ll11illl = i1liIil1ii1ilIIiIlI[liiilii11i1ll11illl - 256][lIl1llI11IlIi1IIliIlI] else liiilii11i1ll11illl = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end if liiilii11i1ll11illl <= lIl1illil11Ii11ilIi1l ~= (li1ll1I11l1Il1iIl1l ~= 0) then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + 1 end end elseif lIlilll1lIilIlllIIli1 >= 9 then if lIlilll1lIilIlllIIli1 < 14 then if lIlilll1lIilIlllIIli1 < 11 then if lIlilll1lIilIlllIIli1 == 10 then if liiilii11i1ll11illl > 255 then liiilii11i1ll11illl = i1liIil1ii1ilIIiIlI[liiilii11i1ll11illl - 256][lIl1llI11IlIi1IIliIlI] else liiilii11i1ll11illl = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end if liiilii11i1ll11illl < lIl1illil11Ii11ilIi1l ~= (li1ll1I11l1Il1iIl1l ~= 0) then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + 1 end else liIlIIIilil1Ii1II11[i1liIil1ii1ilIIiIlI[i1ii1iliIil1iiIil11][lIl1llI11IlIi1IIliIlI]] = IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] end elseif lIlilll1lIilIlllIIli1 >= 12 then if lIlilll1lIilIlllIIli1 ~= 13 then if not not IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] == (lIl1illil11Ii11ilIi1l == 0) then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + 1 end else IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = liIlIIIilil1Ii1II11[i1liIil1ii1ilIIiIlI[i1ii1iliIil1iiIil11][lIl1llI11IlIi1IIliIlI]] end else IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = not IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end elseif lIlilll1lIilIlllIIli1 >= 16 then if lIlilll1lIilIlllIIli1 < 17 then local IlliiIl1Iliiii1il1l = lIlIllliiI1lll11ii11i[i1ii1iliIil1iiIil11] local Illll1lII1lii11i1II = {} if IlliiIl1Iliiii1il1l[lIll11l1iIIIII11lliIi] > 0 then do local lil1liI1i111IllI1lI = {} Illll1lII1lii11i1II = i1lilIlillIII11IllI({}, { __index = function(lIIli1lIilii1lIi1il, IiiiII11IIl1lili11I) local Ii1iiliilIII1I1il1i = lil1liI1i111IllI1lI[IiiiII11IIl1lili11I] return Ii1iiliilIII1I1il1i[1][Ii1iiliilIII1I1il1i[2]] end, __newindex = function(lIIli1lIilii1lIi1il, IiiiII11IIl1lili11I, l1IIi1II1llliI1I1li) local Ii1iiliilIII1I1il1i = lil1liI1i111IllI1lI[IiiiII11IIl1lili11I] Ii1iiliilIII1I1il1i[1][Ii1iiliilIII1I1il1i[2]] = l1IIi1II1llliI1I1li end }) for lIlIiili1111lIIl1Il1l = 1, IlliiIl1Iliiii1il1l[lIll11l1iIIIII11lliIi] do local Iill1I1II1l1I1iI11i = liIiil11Ill1l11I1Il[iliilIll11i1Ii11Iil] if Iill1I1II1l1I1iI11i[Il1IiiliI1iiII1Iii1] == lllIiIllII1illI1l1i then lil1liI1i111IllI1lI[lIlIiili1111lIIl1Il1l - 1] = { IlI1iIi11iIi1I1lIlI, Iill1I1II1l1I1iI11i[lIliiilI11lI1lli1iIii] } elseif Iill1I1II1l1I1iI11i[Il1IiiliI1iiII1Iii1] == I1I1iilIIiiii1iiIll then lil1liI1i111IllI1lI[lIlIiili1111lIIl1Il1l - 1] = { IlliliiIlIIIi1IIi1l, Iill1I1II1l1I1iI11i[lIliiilI11lI1lli1iIii] } end iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + 1 end lIllliIii1lliIIiiliI1[#lIllliIii1lliIIiiliI1 + 1] = lil1liI1i111IllI1lI end end local lIlI1I1llllIlliII1i = lIlIIlllIlIlIIIi1iIII(IlliiIl1Iliiii1il1l, liIlIIIilil1Ii1II11, Illll1lII1lii11i1II) IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = lIlI1I1llllIlliII1i elseif lIlilll1lIilIlllIIli1 == 18 then local iiilI1l1IIiIIiil11i = IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 2] local lIl1Ii11Iil1i1IIIIIii = IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] + iiilI1l1IIiIIiil11i IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = lIl1Ii11Iil1i1IIIIIii if iiilI1l1IIiIIiil11i > 0 then if lIl1Ii11Iil1i1IIIIIii <= IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 1] then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + lIlIlI1il1l1IliiI1iI1 IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 3] = lIl1Ii11Iil1i1IIIIIii end elseif lIl1Ii11Iil1i1IIIIIii >= IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 1] then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + lIlIlI1il1l1IliiI1iI1 IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 3] = lIl1Ii11Iil1i1IIIIIii end else IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end elseif lIlilll1lIilIlllIIli1 == 15 then for lIlIiili1111lIIl1Il1l = li1ll1I11l1Il1iIl1l, liiilii11i1ll11illl do IlI1iIi11iIi1I1lIlI[lIlIiili1111lIIl1Il1l] = nil end else IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = i1liIil1ii1ilIIiIlI[i1ii1iliIil1iiIil11][lIl1llI11IlIi1IIliIlI] end elseif lIlilll1lIilIlllIIli1 < 4 then if lIlilll1lIilIlllIIli1 >= 2 then if lIlilll1lIilIlllIIli1 == 3 then if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl][lIl1illil11Ii11ilIi1l] else liiilii11i1ll11illl = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 1] = liiilii11i1ll11illl IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = liiilii11i1ll11illl[lIl1illil11Ii11ilIi1l] end elseif lIlilll1lIilIlllIIli1 == 1 then IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = lIlIiiiI1IiIIlllI1lIl(lIlIIil1il1111llIiliI(IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l]), "`for` initial value must be a number") IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 1] = lIlIiiiI1IiIIlllI1lIl(lIlIIil1il1111llIiliI(IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 1]), "`for` limit value must be a number") IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 2] = lIlIiiiI1IiIIlllI1lIl(lIlIIil1il1111llIiliI(IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 2]), "`for` step value must be a number") IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] - IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l + 2] iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + lIlIlI1il1l1IliiI1iI1 elseif lIl1illil11Ii11ilIi1l == 170 then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil - 1 liIiil11Ill1l11I1Il[iliilIll11i1Ii11Iil] = { [108436] = 5, [91770] = (li1ll1I11l1Il1iIl1l - 13) % 256, [95622] = (liiilii11i1ll11illl - 13) % 256, [21293] = 0 } elseif lIl1illil11Ii11ilIi1l == 227 then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil - 1 liIiil11Ill1l11I1Il[iliilIll11i1Ii11Iil] = { [108436] = 21, [91770] = (li1ll1I11l1Il1iIl1l - 47) % 256, [95622] = (liiilii11i1ll11illl - 47) % 256, [21293] = 0 } else IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = #IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end elseif lIlilll1lIilIlllIIli1 >= 6 then if lIlilll1lIilIlllIIli1 >= 7 then if lIlilll1lIilIlllIIli1 == 8 then if liiilii11i1ll11illl > 255 then liiilii11i1ll11illl = i1liIil1ii1ilIIiIlI[liiilii11i1ll11illl - 256][lIl1llI11IlIi1IIliIlI] else liiilii11i1ll11illl = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end if liiilii11i1ll11illl == lIl1illil11Ii11ilIi1l ~= (li1ll1I11l1Il1iIl1l ~= 0) then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil + 1 end else if liiilii11i1ll11illl > 255 then liiilii11i1ll11illl = i1liIil1ii1ilIIiIlI[liiilii11i1ll11illl - 256][lIl1llI11IlIi1IIliIlI] else liiilii11i1ll11illl = IlI1iIi11iIi1I1lIlI[liiilii11i1ll11illl] end if lIl1illil11Ii11ilIi1l > 255 then lIl1illil11Ii11ilIi1l = i1liIil1ii1ilIIiIlI[lIl1illil11Ii11ilIi1l - 256][lIl1llI11IlIi1IIliIlI] else lIl1illil11Ii11ilIi1l = IlI1iIi11iIi1I1lIlI[lIl1illil11Ii11ilIi1l] end IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = liiilii11i1ll11illl % lIl1illil11Ii11ilIi1l end else IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] = { i11li11llili1illIlI(i1llI1I1lliil1lili1, 1, liiilii11i1ll11illl == 0 and 895 or liiilii11i1ll11illl) } end elseif lIlilll1lIilIlllIIli1 ~= 5 then local i1Ii1i1il1ll1IIIl1i, ii11ll1llI111i1lllI if liiilii11i1ll11illl ~= 1 then if liiilii11i1ll11illl ~= 0 then ii11ll1llI111i1lllI = li1ll1I11l1Il1iIl1l + liiilii11i1ll11illl - 1 else ii11ll1llI111i1lllI = lIli1llill1illiIlIi1i end ii11ll1llI111i1lllI, i1Ii1i1il1ll1IIIl1i = IllIlI1I1iIil1lIli1(IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l](i11li11llili1illIlI(IlI1iIi11iIi1I1lIlI, li1ll1I11l1Il1iIl1l + 1, ii11ll1llI111i1lllI))) else ii11ll1llI111i1lllI, i1Ii1i1il1ll1IIIl1i = IllIlI1I1iIil1lIli1(IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l]()) end IlI1iIi11iIi1I1lIlI = i1Ii1i1il1ll1IIIl1i return true, 1, ii11ll1llI111i1lllI elseif lIl1illil11Ii11ilIi1l == 20 then iliilIll11i1Ii11Iil = iliilIll11i1Ii11Iil - 1 liIiil11Ill1l11I1Il[iliilIll11i1Ii11Iil] = { [108436] = 0, [91770] = (li1ll1I11l1Il1iIl1l - 41) % 256, [95622] = (liiilii11i1ll11illl - 41) % 256, [21293] = 0 } else IlliliiIlIIIi1IIi1l[liiilii11i1ll11illl] = IlI1iIi11iIi1I1lIlI[li1ll1I11l1Il1iIl1l] end end end local ll1l1IllI1il1lII1II, lllIIill111IlIiiI11, IliIIlii1Iii1II1lli, lIl1lIl11lIi1Il1lII1i = I1l1111I11iiIlII1II(l1IiIllli1iil1Iill1) if ll1l1IllI1il1lII1II then if IliIIlii1Iii1II1lli then return i11li11llili1illIlI(IlI1iIi11iIi1I1lIlI, IliIIlii1Iii1II1lli, lIl1lIl11lIi1Il1lII1i) end else local il1II1iill1Il1Illll = lIlliI111ll1IIli1l111("Luraph Script:" .. (iliilii1IliiilI1II1[iliilIll11i1Ii11Iil - 1] or "") .. ": " .. lII1Il1III1iIilill1(lllIIill111IlIiiI11), "[^:]+:%d*: ", function(llIlI1iiIilIlI1iili) if not II1liiiliIlI1lI1II1(llIlI1iiIilIlI1iili, "Luraph Script:%d") then return "" end end) lllliIl1iIlii11IIi1(il1II1iill1Il1Illll, 0) end end lIl1iIiIIi1IIIiilIil1(lllIIIl1ililllli1l1, liIlIIIilil1Ii1II11) return lllIIIl1ililllli1l1 end local iil1liIiiI11lil111I = III1lIil1lIiii1lI1I() return lIlIIlllIlIlIIIi1iIII(iil1liIiiI11lil111I, liIlIIIilil1Ii1II11)() end i1l1ii111i1iii1l1IilI1i1I11iIilllIi1i()) 
